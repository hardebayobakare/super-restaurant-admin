// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Restaurant {
  id  String  @id @default(uuid())
  name  String
  userId  String
  billboards Billboard[] @relation("RestaurantToBillboard")
  category Category[] @relation("RestaurantToCategory")
  size Size[] @relation("RestaurantToSize")
  product Product[] @relation("RestaurantToProduct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id String @id @default(uuid())
  restaurantId String
  restaurant Restaurant @relation("RestaurantToBillboard", fields: [restaurantId], references: [id])
  categories Category[]
  label String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([restaurantId])
}

model Category {
  id String @id @default(uuid())
  restaurantId String
  restaurant Restaurant @relation("RestaurantToCategory", fields: [restaurantId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  product Product[] @relation("CategoryToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([restaurantId])
  @@index([billboardId])
}

model Size {
  id String @id @default(uuid())
  restaurantId String
  restaurant Restaurant @relation("RestaurantToSize", fields: [restaurantId], references: [id])
  product Product[]
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([restaurantId])
}

model Product {
  id String @id @default(uuid())
  restaurantId String
  restaurant Restaurant @relation("RestaurantToProduct", fields: [restaurantId], references: [id])
  categoryId String
  category Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name String
  price Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  sizeId String
  size Size @relation(fields: [sizeId], references: [id])
  image Image[]
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([restaurantId])
  @@index([categoryId])
  @@index([sizeId])
}

model Image {
  id String @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url String
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}